name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build and push Docker image
        run: |
          echo "${{ secrets.GITHUB_ACTIONS_SSH_KEY }}" > ~/.ssh/github_actions_key
          chmod 600 ~/.ssh/github_actions_key
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/github_actions_key
          docker build -t element-api-bride::$(date +%s).
          docker save element-api-bride::$(date +%s) | ssh -i ssh_key.pem -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} 'docker load'

      - name: SSH Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.DOCKER_SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            docker stop element-api-bride || true
            docker rm element-api-bride || true
            docker run -d --name element-api-bride -p 3000:3000 element-api-bride::$(date +%s)


name: 'main'
on:
  push:
    branches: [main]
    paths:
      - '*'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t my-image:latest .

      - name: Save Docker image as tar file
        run: docker save -o my-image.tar my-image:latest

      - name: Transfer Docker image to remote server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DOCKER_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no my-image.tar ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PATH }}

      - name: Load Docker image on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'ENDSSH'
          docker load -i ${{ secrets.SERVER_PATH }}/my-image.tar
          ENDSSH

      - name: Transfer Docker Compose file to remote server
        run: |
          scp -o StrictHostKeyChecking=no docker-compose.yaml ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:${{ secrets.SERVER_PATH }}

      - name: Deploy Docker containers using Docker Compose on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} << 'ENDSSH'
          docker compose -f ${{ secrets.SERVER_PATH }}/docker-compose.yaml up -d
          ENDSSH