generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  createdAt DateTime  @default(now())
  firstName String?
  lastLogin DateTime?
  lastName  String?
  password  String    @default("EsweFernwaerme2024")
  role      Role      @default(USER)
  updatedAt DateTime  @updatedAt
  username  String    @unique
}

model Device {
  id         String            @id @default(uuid())
  slug       String            @unique
  name       String
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  lastSeen   DateTime?
  status     DeviceStatus      @default(PENDING)
  readings   Reading[]
  statistics DeviceStatistics?
}

enum DeviceStatus {
  ACTIVE
  ERROR
  WARNING
  INACTIVE
  PENDING
}

model Reading {
  id         String   @id @default(uuid())
  deviceId   String
  measuredAt DateTime
  battery    Float
  iso1       Float
  iso2       Float
  loop1      Float
  loop2      Float
  temp       Int?
  device     Device   @relation(fields: [deviceId], references: [id])

  @@index([deviceId, measuredAt])
}

model DeviceStatistics {
  id          String   @id @default(uuid())
  deviceId    String   @unique
  device      Device   @relation(fields: [deviceId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  iso1Mean    Float
  iso1Median  Float
  iso1StdDev  Float
  iso2Mean    Float
  iso2Median  Float
  iso2StdDev  Float
  loop1Mean   Float
  loop1Median Float
  loop1StdDev Float
  loop2Mean   Float
  loop2Median Float
  loop2StdDev Float

  @@index([deviceId])
}

enum Role {
  VIEWER
  USER
  ADMIN
}
